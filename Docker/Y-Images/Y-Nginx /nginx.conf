user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    #include /etc/nginx/conf.d/*.conf;

    server {
        listen 80;
        server_name localhost 127.0.0.1;

        location / {
            #default nginx root.
            root /usr/share/nginx/html;
        }
    }


    server {
        listen 80;
        server_name nginx-static.local 127.0.0.2;

        location / {
            root /data/www/StaticWebPageExample;
        }
    }
    
    #upstream pgadmin {
        #server z-pgadmin:80;
    #}
    server {
        listen 80;
        server_name pgadmin.local 127.0.0.3;

        location / {
            #127.0.0.11 internal Docker DNS.
            resolver 127.0.0.11 valid=10s ipv6=off;
            #resolver_timeout 5s;
            set $pgadmin "z-pgadmin:80";
            #proxy_pass http://localhost:8003;
            proxy_pass http://$pgadmin;
            #proxy_redirect off;
            proxy_http_version 1.1;
            proxy_set_header Host               $host;
            proxy_set_header X-Real-IP          $remote_addr;
            proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto  $scheme;
        }
    }

    server {
        listen 80;
        server_name superset.local 127.0.0.4;

        location / {
            #127.0.0.11 internal Docker DNS.
            resolver 127.0.0.11 valid=10s ipv6=off;
            set $superset "z-superset:8088";
            proxy_pass http://$superset;

            proxy_http_version 1.1;
            proxy_set_header Host               $host;
        }
    }

    server {
        listen 80;
        server_name adminer.local 127.0.0.5;
        location / {
            #127.0.0.11 internal Docker DNS.
            resolver 127.0.0.11 valid=10s ipv6=off;
            set $adminer "y-adminer:8080";
            proxy_pass http://$adminer;
            proxy_http_version 1.1;
            proxy_set_header Host    $host;
        }
    }

}
